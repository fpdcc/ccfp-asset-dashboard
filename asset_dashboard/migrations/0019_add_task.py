# Generated by Django 3.2.9 on 2021-12-06 21:06

from django.db import migrations, models
import django.db.models.deletion


def project_to_task(apps, schema_editor):
    '''
    Create default task for each existing project, then migrate existing phase,
    bid quarter, project finances, and funding year to task.
    '''
    Project = apps.get_model('asset_dashboard', 'Project')
    Task = apps.get_model('asset_dashboard', 'Task')
    TaskFinances = apps.get_model('asset_dashboard', 'TaskFinances')
    TaskFundingYear = apps.get_model('asset_dashboard', 'TaskFundingYear')

    for project in Project.objects.all():
        task = Task.objects.create(
            project=project,
            task_type=project.phase or 'implementation',
            estimated_bid_quarter=project.estimated_bid_quarter,
        )

        finances = TaskFinances.objects.get(project=project)
        finances.task = task
        finances.save()

        try:
            funding_year = TaskFundingYear.objects.get(project=project)
        except TaskFundingYear.DoesNotExist:
            print(f'Could not find funding year for project "{project}". Skipping...')
        else:
            funding_year.task = task
            funding_year.save()

def task_to_project(apps, schema_editor):
    '''
    Migrate task type -> phase, estimated bid quarter, and funding year from
    existing tasks back up to projects. If more than one task exists for a
    given project, update the root project from the first task, then break
    subsequent tasks into new projects, helpfully labelled with the task
    sequence.
    '''
    Project = apps.get_model('asset_dashboard', 'Project')
    Task = apps.get_model('asset_dashboard', 'Task')
    TaskFinances = apps.get_model('asset_dashboard', 'TaskFinances')
    TaskFundingYear = apps.get_model('asset_dashboard', 'TaskFundingYear')

    seen_ids = {}

    for task in Task.objects.order_by('sequence'):
        project = task.project

        if project.id in seen_ids:
            project = Project.objects.create(
                **{
                    k: v for k, v in project.__dict__.items()
                    if k in {'name', 'description', 'category_id', 'section_owner_id'}
                }
            )
            project.name = f'{project.name} - Task {task.sequence}'
        else:
            seen_ids.add(project.id)

        project.phase = task.task_type
        project.estimated_bid_quarter = task.estimated_bid_quarter
        project.save()

        finances = TaskFinances.objects.get(project=project)
        finances.project = project
        finances.save()

        funding_year = TaskFundingYear.objects.get(project=project)
        funding_year.project = project
        funding_year.save()


class Migration(migrations.Migration):

    dependencies = [
        ('asset_dashboard', '0018_auto_20211124_2000'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField(default=1)),
                ('task_type', models.TextField(blank=True, choices=[('phase_1', 'Phase 1'), ('phase_2', 'Phase 2'), ('phase_3_engineering', 'Phase 3 Engineering'), ('phase_3_construction', 'Phase 3 Construction'), ('feasibility', 'Feasibility'), ('design', 'Design'), ('construction', 'Construction'), ('implementation', 'Implementation')], null=True)),
                ('estimated_bid_quarter', models.TextField(blank=True, choices=[('Q1', 'Q1'), ('Q2', 'Q2'), ('Q3', 'Q3'), ('Q4', 'Q4')], null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='asset_dashboard.project')),
            ],
        ),
        migrations.RenameModel(
            old_name='ProjectFinances',
            new_name='TaskFinances',
        ),
        migrations.RenameModel(
            old_name='ProjectFundingYear',
            new_name='TaskFundingYear',
        ),
        migrations.AddField(
            model_name='taskfinances',
            name='task',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='asset_dashboard.task'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='taskfundingyear',
            name='task',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='asset_dashboard.task'),
        ),
        migrations.RunPython(
            project_to_task, task_to_project
        ),
        migrations.RemoveField(
            model_name='project',
            name='estimated_bid_quarter',
        ),
        migrations.RemoveField(
            model_name='project',
            name='phase',
        ),
        migrations.RemoveField(
            model_name='taskfinances',
            name='project',
        ),
        migrations.RemoveField(
            model_name='taskfundingyear',
            name='project',
        ),
    ]
